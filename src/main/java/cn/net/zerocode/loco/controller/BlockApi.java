/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.17).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cn.net.zerocode.loco.controller;

import cn.net.zerocode.loco.entity.Block;
import cn.net.zerocode.loco.entity.MultiDelete;
import com.java2e.martin.common.core.api.R;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import java.math.BigDecimal;
import java.util.Optional;

@Api(value = "block", description = "the block API")
@RequestMapping(value = "")
public interface BlockApi {

    @ApiOperation(value = "区块管理", nickname = "create", notes = "新增", tags = {"block",})
    @RequestMapping(value = "/block", method = RequestMethod.POST)
    R create(@ApiParam(value = "", required = true) @Valid @RequestBody Block data);


    @ApiOperation(value = "区块管理", nickname = "delete", notes = "删除", tags = {"block",})
    @RequestMapping(value = "/block/{id}", method = RequestMethod.DELETE)
    R delete(@ApiParam(value = "A unique integer value identifying this 区块管理.", required = true) @PathVariable("id") Integer id);


    @ApiOperation(value = "区块管理", nickname = "list", notes = "查询", tags = {"block",})
    @RequestMapping(value = "/block", method = RequestMethod.GET)
    R list(@ApiParam(value = "") @Valid @RequestParam(value = "name__icontains", required = false) Optional<String> nameIcontains, @ApiParam(value = "") @Valid @RequestParam(value = "id", required = false) Optional<BigDecimal> id, @ApiParam(value = "") @Valid @RequestParam(value = "blockTypeId", required = false) Optional<String> blockTypeId, @ApiParam(value = "A search term.") @Valid @RequestParam(value = "search", required = false) Optional<String> search, @ApiParam(value = "Which field to use when ordering the results.") @Valid @RequestParam(value = "ordering", required = false) Optional<String> ordering, @ApiParam(value = "A page number within the paginated result set.") @Valid @RequestParam(value = "page", required = false) Optional<Integer> page, @ApiParam(value = "Number of results to return per page.") @Valid @RequestParam(value = "limit", required = false) Optional<Integer> limit);


    @ApiOperation(value = "区块管理", nickname = "multipleDelete", notes = "区块管理", tags = {"block",})
    @RequestMapping(value = "/block/multiple_delete", method = RequestMethod.DELETE)
    R multipleDelete(@ApiParam(value = "", required = true) @Valid @RequestBody MultiDelete data);


    @ApiOperation(value = "区块管理", nickname = "partialUpdate", notes = "区块管理", tags = {"block",})
    @RequestMapping(value = "/block/{id}", method = RequestMethod.PATCH)
    R partialUpdate(@ApiParam(value = "A unique integer value identifying this 区块管理.", required = true) @PathVariable("id") Integer id, @ApiParam(value = "", required = true) @Valid @RequestBody Block data);


    @ApiOperation(value = "区块管理", nickname = "read", notes = "单例", tags = {"block",})
    @RequestMapping(value = "/block/{id}", method = RequestMethod.GET)
    R read(@ApiParam(value = "A unique integer value identifying this 区块管理.", required = true) @PathVariable("id") Integer id);


    @ApiOperation(value = "区块管理", nickname = "update", notes = "修改", tags = {"block",})
    @RequestMapping(value = "/block/{id}", method = RequestMethod.PUT)
    R update(@ApiParam(value = "A unique integer value identifying this 区块管理.", required = true) @PathVariable("id") Long id, @ApiParam(value = "", required = true) @Valid @RequestBody Block data);

}
